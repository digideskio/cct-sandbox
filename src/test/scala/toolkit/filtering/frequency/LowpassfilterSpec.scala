/*
 * (c) Copyright 2016 Hewlett Packard Enterprise Development LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package toolkit.filtering.frequency

import libcog._
import org.scalatest.FunSuite
import org.junit.runner.RunWith
import org.scalatest.junit.JUnitRunner

/** Test code. */
@RunWith(classOf[JUnitRunner])
class LowpassfilterSpec extends FunSuite {
  test("all") {
    // This matrix was generated by calling the matlab function
    // lowpassfilter([8, 8], .45, 15)
    val filter = Matrix( Array(
      Array(1.0000f, 1.0000f, 1.0000f, 0.9958f, 0.0407f, 0.9958f, 1.0000f, 1.0000f),
      Array(1.0000f, 1.0000f, 1.0000f, 0.9799f, 0.0168f, 0.9799f, 1.0000f, 1.0000f),
      Array(1.0000f, 1.0000f, 0.9993f, 0.4884f, 0.0015f, 0.4884f, 0.9993f, 1.0000f),
      Array(0.9958f, 0.9799f, 0.4884f, 0.0072f, 0.0001f, 0.0072f, 0.4884f, 0.9799f),
      Array(0.0407f, 0.0168f, 0.0015f, 0.0001f, 0.0000f, 0.0001f, 0.0015f, 0.0168f),
      Array(0.9958f, 0.9799f, 0.4884f, 0.0072f, 0.0001f, 0.0072f, 0.4884f, 0.9799f),
      Array(1.0000f, 1.0000f, 0.9993f, 0.4884f, 0.0015f, 0.4884f, 0.9993f, 1.0000f),
      Array(1.0000f, 1.0000f, 1.0000f, 0.9799f, 0.0168f, 0.9799f, 1.0000f, 1.0000f)
    ))

    // Because we have only 4 decimals of precision in the Matlab code, we
    // must truncate our result to 4 decimals.
    def truncate(matrix: Matrix): Matrix = {
      matrix.map(x => (1000 * x).toInt.toFloat / 1000)
    }

    val myFilter = Lowpassfilter(8, 8, 0.45f, 15)

    myFilter.print

    require(truncate(filter) ~== truncate(myFilter))
  }
}