/*
 * (c) Copyright 2016 Hewlett Packard Enterprise Development LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package toolkit.filtering.contourlets

import libcog._
import org.junit.runner.RunWith
import org.scalatest.junit.JUnitRunner
import org.scalatest.FunSuite
import org.scalatest.matchers.MustMatchers

/** Test code.
  *
  * @author Greg Snider
  */
@RunWith(classOf[JUnitRunner])
class DiamondMaxFlatFilterSpec extends FunSuite with MustMatchers {
  test("all") {
    // Values printed out from Matlab file dmaxflat.m
    val dmax_1_0 = Matrix(
      Array( 0.000000e+00f, 2.500000e-01f, 0.000000e+00f),
      Array( 2.500000e-01f, 0.000000e+00f, 2.500000e-01f),
      Array( 0.000000e+00f, 2.500000e-01f, 0.000000e+00f)
    )
    val dmax_2_0 = Matrix(
      Array( 0.000000e+00f, -3.125000e-02f, 0.000000e+00f, -3.125000e-02f, 0.000000e+00f),
      Array( -3.125000e-02f, 0.000000e+00f, 3.125000e-01f, 0.000000e+00f, -3.125000e-02f),
      Array( 0.000000e+00f, 3.125000e-01f, 0.000000e+00f, 3.125000e-01f, 0.000000e+00f),
      Array( -3.125000e-02f, 0.000000e+00f, 3.125000e-01f, 0.000000e+00f, -3.125000e-02f),
      Array( 0.000000e+00f, -3.125000e-02f, 0.000000e+00f, -3.125000e-02f, 0.000000e+00f)
    )
    val dmax_3_0 = Matrix(
      Array( 0.000000e+00f, 5.859375e-03f, 0.000000e+00f, 3.906250e-03f, 0.000000e+00f, 5.859375e-03f, 0.000000e+00f),
      Array( 5.859375e-03f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 5.859375e-03f),
      Array( 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 3.398438e-01f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f),
      Array( 3.906250e-03f, 0.000000e+00f, 3.398438e-01f, 0.000000e+00f, 3.398438e-01f, 0.000000e+00f, 3.906250e-03f),
      Array( 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 3.398438e-01f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f),
      Array( 5.859375e-03f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 5.859375e-03f),
      Array( 0.000000e+00f, 5.859375e-03f, 0.000000e+00f, 3.906250e-03f, 0.000000e+00f, 5.859375e-03f, 0.000000e+00f)
    )
    val dmax_4_0 = Matrix(
      Array( 0.000000e+00f, -1.220703e-03f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -1.220703e-03f, 0.000000e+00f),
      Array( -1.220703e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, 8.300781e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -1.220703e-03f),
      Array( 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f),
      Array( -7.324219e-04f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 3.549805e-01f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -7.324219e-04f),
      Array( 0.000000e+00f, 8.300781e-03f, 0.000000e+00f, 3.549805e-01f, 0.000000e+00f, 3.549805e-01f, 0.000000e+00f, 8.300781e-03f, 0.000000e+00f),
      Array( -7.324219e-04f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 3.549805e-01f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -7.324219e-04f),
      Array( 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f),
      Array( -1.220703e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, 8.300781e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -1.220703e-03f),
      Array( 0.000000e+00f, -1.220703e-03f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -1.220703e-03f, 0.000000e+00f)
    )
    val dmax_5_0 = Matrix(
      Array( 0.000000e+00f, 2.670288e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 1.373291e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 2.670288e-04f, 0.000000e+00f),
      Array( 2.670288e-04f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 2.670288e-04f),
      Array( 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f),
      Array( 1.525879e-04f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.525879e-04f),
      Array( 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 3.645325e-01f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f),
      Array( 1.373291e-04f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 3.645325e-01f, 0.000000e+00f, 3.645325e-01f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 1.373291e-04f),
      Array( 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 3.645325e-01f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f),
      Array( 1.525879e-04f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.525879e-04f),
      Array( 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f),
      Array( 2.670288e-04f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 2.670288e-04f),
      Array( 0.000000e+00f, 2.670288e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 1.373291e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 2.670288e-04f, 0.000000e+00f)
    )
    val dmax_6_0 = Matrix(
      Array( 0.000000e+00f, -6.008148e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -6.008148e-05f, 0.000000e+00f),
      Array( -6.008148e-05f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 4.234314e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -6.008148e-05f),
      Array( 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f),
      Array( -3.337860e-05f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.337860e-05f),
      Array( 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f),
      Array( -2.861023e-05f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 3.710861e-01f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -2.861023e-05f),
      Array( 0.000000e+00f, 4.196167e-05f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 3.710861e-01f, 0.000000e+00f, 3.710861e-01f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 4.196167e-05f, 0.000000e+00f),
      Array( -2.861023e-05f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 3.710861e-01f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -2.861023e-05f),
      Array( 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f),
      Array( -3.337860e-05f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.337860e-05f),
      Array( 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f),
      Array( -6.008148e-05f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 4.234314e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -6.008148e-05f),
      Array( 0.000000e+00f, -6.008148e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -6.008148e-05f, 0.000000e+00f)
    )
    val dmax_7_0 = Matrix(
      Array( 0.000000e+00f, 1.376867e-05f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 5.960464e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 1.376867e-05f, 0.000000e+00f),
      Array( 1.376867e-05f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.376867e-05f),
      Array( 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f),
      Array( 7.510185e-06f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 7.510185e-06f),
      Array( 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f),
      Array( 6.258488e-06f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 6.258488e-06f),
      Array( 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 3.758514e-01f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f),
      Array( 5.960464e-06f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 3.758514e-01f, 0.000000e+00f, 3.758514e-01f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 5.960464e-06f),
      Array( 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 3.758514e-01f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f),
      Array( 6.258488e-06f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 6.258488e-06f),
      Array( 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f),
      Array( 7.510185e-06f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 7.510185e-06f),
      Array( 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f),
      Array( 1.376867e-05f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.376867e-05f),
      Array( 0.000000e+00f, 1.376867e-05f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 5.960464e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 1.376867e-05f, 0.000000e+00f)
    )
    val dmax_1_1 = Matrix(
      Array( 0.000000e+00f, 2.500000e-01f, 0.000000e+00f),
      Array( 2.500000e-01f, 1.000000e+00f, 2.500000e-01f),
      Array( 0.000000e+00f, 2.500000e-01f, 0.000000e+00f)
    )
    val dmax_2_1 = Matrix(
      Array( 0.000000e+00f, -3.125000e-02f, 0.000000e+00f, -3.125000e-02f, 0.000000e+00f),
      Array( -3.125000e-02f, 0.000000e+00f, 3.125000e-01f, 0.000000e+00f, -3.125000e-02f),
      Array( 0.000000e+00f, 3.125000e-01f, 1.000000e+00f, 3.125000e-01f, 0.000000e+00f),
      Array( -3.125000e-02f, 0.000000e+00f, 3.125000e-01f, 0.000000e+00f, -3.125000e-02f),
      Array( 0.000000e+00f, -3.125000e-02f, 0.000000e+00f, -3.125000e-02f, 0.000000e+00f)
    )
    val dmax_3_1 = Matrix(
      Array( 0.000000e+00f, 5.859375e-03f, 0.000000e+00f, 3.906250e-03f, 0.000000e+00f, 5.859375e-03f, 0.000000e+00f),
      Array( 5.859375e-03f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 5.859375e-03f),
      Array( 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 3.398438e-01f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f),
      Array( 3.906250e-03f, 0.000000e+00f, 3.398438e-01f, 1.000000e+00f, 3.398438e-01f, 0.000000e+00f, 3.906250e-03f),
      Array( 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 3.398438e-01f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f),
      Array( 5.859375e-03f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, -5.273438e-02f, 0.000000e+00f, 5.859375e-03f),
      Array( 0.000000e+00f, 5.859375e-03f, 0.000000e+00f, 3.906250e-03f, 0.000000e+00f, 5.859375e-03f, 0.000000e+00f)
    )
    val dmax_4_1 = Matrix(
      Array( 0.000000e+00f, -1.220703e-03f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -1.220703e-03f, 0.000000e+00f),
      Array( -1.220703e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, 8.300781e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -1.220703e-03f),
      Array( 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f),
      Array( -7.324219e-04f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 3.549805e-01f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -7.324219e-04f),
      Array( 0.000000e+00f, 8.300781e-03f, 0.000000e+00f, 3.549805e-01f, 1.000000e+00f, 3.549805e-01f, 0.000000e+00f, 8.300781e-03f, 0.000000e+00f),
      Array( -7.324219e-04f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 3.549805e-01f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -7.324219e-04f),
      Array( 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, -6.738281e-02f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f),
      Array( -1.220703e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, 8.300781e-03f, 0.000000e+00f, 1.269531e-02f, 0.000000e+00f, -1.220703e-03f),
      Array( 0.000000e+00f, -1.220703e-03f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -7.324219e-04f, 0.000000e+00f, -1.220703e-03f, 0.000000e+00f)
    )
    val dmax_5_1 = Matrix(
      Array( 0.000000e+00f, 2.670288e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 1.373291e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 2.670288e-04f, 0.000000e+00f),
      Array( 2.670288e-04f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 2.670288e-04f),
      Array( 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f),
      Array( 1.525879e-04f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.525879e-04f),
      Array( 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 3.645325e-01f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f),
      Array( 1.373291e-04f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 3.645325e-01f, 1.000000e+00f, 3.645325e-01f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 1.373291e-04f),
      Array( 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 3.645325e-01f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f),
      Array( 1.525879e-04f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, -7.781982e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.525879e-04f),
      Array( 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, 1.228333e-02f, 0.000000e+00f, 1.907349e-02f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f),
      Array( 2.670288e-04f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -1.907349e-03f, 0.000000e+00f, -3.242493e-03f, 0.000000e+00f, 2.670288e-04f),
      Array( 0.000000e+00f, 2.670288e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 1.373291e-04f, 0.000000e+00f, 1.525879e-04f, 0.000000e+00f, 2.670288e-04f, 0.000000e+00f)
    )
    val dmax_6_1 = Matrix(
      Array( 0.000000e+00f, -6.008148e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -6.008148e-05f, 0.000000e+00f),
      Array( -6.008148e-05f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 4.234314e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -6.008148e-05f),
      Array( 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f),
      Array( -3.337860e-05f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.337860e-05f),
      Array( 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f),
      Array( -2.861023e-05f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 3.710861e-01f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -2.861023e-05f),
      Array( 0.000000e+00f, 4.196167e-05f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 3.710861e-01f, 1.000000e+00f, 3.710861e-01f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 4.196167e-05f, 0.000000e+00f),
      Array( -2.861023e-05f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 3.710861e-01f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -2.861023e-05f),
      Array( 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, -8.557320e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f),
      Array( -3.337860e-05f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, 1.569748e-02f, 0.000000e+00f, 2.467632e-02f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.337860e-05f),
      Array( 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -3.261566e-03f, 0.000000e+00f, -5.636215e-03f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f),
      Array( -6.008148e-05f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 4.234314e-04f, 0.000000e+00f, 4.720688e-04f, 0.000000e+00f, 8.411407e-04f, 0.000000e+00f, -6.008148e-05f),
      Array( 0.000000e+00f, -6.008148e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -2.861023e-05f, 0.000000e+00f, -3.337860e-05f, 0.000000e+00f, -6.008148e-05f, 0.000000e+00f)
    )
    val dmax_7_1 = Matrix(
      Array( 0.000000e+00f, 1.376867e-05f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 5.960464e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 1.376867e-05f, 0.000000e+00f),
      Array( 1.376867e-05f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.376867e-05f),
      Array( 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f),
      Array( 7.510185e-06f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 7.510185e-06f),
      Array( 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f),
      Array( 6.258488e-06f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 6.258488e-06f),
      Array( 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 3.758514e-01f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f),
      Array( 5.960464e-06f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 3.758514e-01f, 1.000000e+00f, 3.758514e-01f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 5.960464e-06f),
      Array( 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 3.758514e-01f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f),
      Array( 6.258488e-06f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, -9.153539e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 6.258488e-06f),
      Array( 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, 1.858354e-02f, 0.000000e+00f, 2.951294e-02f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f),
      Array( 7.510185e-06f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -4.643798e-03f, 0.000000e+00f, -8.136868e-03f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 7.510185e-06f),
      Array( 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 8.227825e-04f, 0.000000e+00f, 9.199977e-04f, 0.000000e+00f, 1.664758e-03f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f),
      Array( 1.376867e-05f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.022220e-04f, 0.000000e+00f, -1.197457e-04f, 0.000000e+00f, -2.190471e-04f, 0.000000e+00f, 1.376867e-05f),
      Array( 0.000000e+00f, 1.376867e-05f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 5.960464e-06f, 0.000000e+00f, 6.258488e-06f, 0.000000e+00f, 7.510185e-06f, 0.000000e+00f, 1.376867e-05f, 0.000000e+00f)
    )

    require(DiamondMaxFlatFilter(1, 0) ~== dmax_1_0)
    require(DiamondMaxFlatFilter(2, 0) ~== dmax_2_0)
    require(DiamondMaxFlatFilter(3, 0) ~== dmax_3_0)
    require(DiamondMaxFlatFilter(4, 0) ~== dmax_4_0)
    require(DiamondMaxFlatFilter(5, 0) ~== dmax_5_0)
    require(DiamondMaxFlatFilter(6, 0) ~== dmax_6_0)
    require(DiamondMaxFlatFilter(7, 0) ~== dmax_7_0)

    require(DiamondMaxFlatFilter(1, 1) ~== dmax_1_1)
    require(DiamondMaxFlatFilter(2, 1) ~== dmax_2_1)
    require(DiamondMaxFlatFilter(3, 1) ~== dmax_3_1)
    require(DiamondMaxFlatFilter(4, 1) ~== dmax_4_1)
    require(DiamondMaxFlatFilter(5, 1) ~== dmax_5_1)
    require(DiamondMaxFlatFilter(6, 1) ~== dmax_6_1)
    require(DiamondMaxFlatFilter(7, 1) ~== dmax_7_1)
  }
}