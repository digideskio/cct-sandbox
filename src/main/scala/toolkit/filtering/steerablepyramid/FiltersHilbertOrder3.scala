/*
 * (c) Copyright 2016 Hewlett Packard Enterprise Development LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package toolkit.filtering.steerablepyramid

import libcog._

/**
  * Approximate Hilbert transforms of the order-3 Steerable Pyramid, described
  * in the paper "Design and Use of Steerable Filters," by Freeman and Adelson.
  *
  * These filters are not very accurate, but that's OK because we're not using
  * them fore reconstruction. The FiltersOrder3 are the odd filters, these
  * are the corresponding even filters.
  *
  * @author Greg Snider
  */

object FiltersHilbertOrder3 extends Filters {

  val harmonics = Array(1, 3)

  val mtx = toScalarField(Matrix(
    Array( 0.5000f,    0.3536f,         0f,   -0.3536f),
    Array(-0.0000f,    0.3536f,    0.5000f,    0.3536f),
    Array( 0.5000f,   -0.3536f,         0f,    0.3536f),
    Array(-0.0000f,    0.3536f,   -0.5000f,    0.3536f)
  ))

  val highpass0 = toScalarField(Matrix (
    Array(-4.0483998600E-4f, -6.2596000498E-4f, -3.7829999201E-5f,  8.8387000142E-4f,  1.5450799838E-3f,  1.9235999789E-3f,  2.0687500946E-3f,  2.0898699295E-3f,  2.0687500946E-3f,  1.9235999789E-3f,  1.5450799838E-3f,  8.8387000142E-4f, -3.7829999201E-5f, -6.2596000498E-4f, -4.0483998600E-4f),
    Array(-6.2596000498E-4f, -3.2734998967E-4f,  7.7435001731E-4f,  1.5874400269E-3f,  2.1750701126E-3f,  2.5626500137E-3f,  2.2892199922E-3f,  1.9755100366E-3f,  2.2892199922E-3f,  2.5626500137E-3f,  2.1750701126E-3f,  1.5874400269E-3f,  7.7435001731E-4f, -3.2734998967E-4f, -6.2596000498E-4f),
    Array(-3.7829999201E-5f,  7.7435001731E-4f,  1.1793200392E-3f,  1.4050999889E-3f,  2.2253401112E-3f,  2.1145299543E-3f,  3.3578000148E-4f, -8.3368999185E-4f,  3.3578000148E-4f,  2.1145299543E-3f,  2.2253401112E-3f,  1.4050999889E-3f,  1.1793200392E-3f,  7.7435001731E-4f, -3.7829999201E-5f),
    Array(8.8387000142E-4f,   1.5874400269E-3f,  1.4050999889E-3f,  1.2960999738E-3f, -4.9274001503E-4f, -3.1295299996E-3f, -4.5751798898E-3f, -5.1014497876E-3f, -4.5751798898E-3f, -3.1295299996E-3f, -4.9274001503E-4f,  1.2960999738E-3f,  1.4050999889E-3f,  1.5874400269E-3f,  8.8387000142E-4f),
    Array(1.5450799838E-3f,   2.1750701126E-3f,  2.2253401112E-3f, -4.9274001503E-4f, -6.3222697936E-3f, -2.7556000277E-3f,  5.3632198833E-3f,  7.3032598011E-3f,  5.3632198833E-3f, -2.7556000277E-3f, -6.3222697936E-3f, -4.9274001503E-4f,  2.2253401112E-3f,  2.1750701126E-3f,  1.5450799838E-3f),
    Array(1.9235999789E-3f,   2.5626500137E-3f,  2.1145299543E-3f, -3.1295299996E-3f, -2.7556000277E-3f,  1.3962360099E-2f,  7.8046298586E-3f, -9.3812197447E-3f,  7.8046298586E-3f,  1.3962360099E-2f, -2.7556000277E-3f, -3.1295299996E-3f,  2.1145299543E-3f,  2.5626500137E-3f,  1.9235999789E-3f),
    Array(2.0687500946E-3f,   2.2892199922E-3f,  3.3578000148E-4f, -4.5751798898E-3f,  5.3632198833E-3f,  7.8046298586E-3f, -7.9501636326E-2f, -0.1554141641f,    -7.9501636326E-2f,  7.8046298586E-3f,  5.3632198833E-3f, -4.5751798898E-3f,  3.3578000148E-4f,  2.2892199922E-3f,  2.0687500946E-3f),
    Array(2.0898699295E-3f,   1.9755100366E-3f, -8.3368999185E-4f, -5.1014497876E-3f,  7.3032598011E-3f, -9.3812197447E-3f, -0.1554141641f,     0.7303866148f,    -0.1554141641f,    -9.3812197447E-3f,  7.3032598011E-3f, -5.1014497876E-3f, -8.3368999185E-4f,  1.9755100366E-3f,  2.0898699295E-3f),
    Array(2.0687500946E-3f,   2.2892199922E-3f,  3.3578000148E-4f, -4.5751798898E-3f,  5.3632198833E-3f,  7.8046298586E-3f, -7.9501636326E-2f, -0.1554141641f,    -7.9501636326E-2f,  7.8046298586E-3f,  5.3632198833E-3f, -4.5751798898E-3f,  3.3578000148E-4f,  2.2892199922E-3f,  2.0687500946E-3f),
    Array(1.9235999789E-3f,   2.5626500137E-3f,  2.1145299543E-3f, -3.1295299996E-3f, -2.7556000277E-3f,  1.3962360099E-2f,  7.8046298586E-3f, -9.3812197447E-3f,  7.8046298586E-3f,  1.3962360099E-2f, -2.7556000277E-3f, -3.1295299996E-3f,  2.1145299543E-3f,  2.5626500137E-3f,  1.9235999789E-3f),
    Array(1.5450799838E-3f,   2.1750701126E-3f,  2.2253401112E-3f, -4.9274001503E-4f, -6.3222697936E-3f, -2.7556000277E-3f,  5.3632198833E-3f,  7.3032598011E-3f,  5.3632198833E-3f, -2.7556000277E-3f, -6.3222697936E-3f, -4.9274001503E-4f,  2.2253401112E-3f,  2.1750701126E-3f,  1.5450799838E-3f),
    Array(8.8387000142E-4f,   1.5874400269E-3f,  1.4050999889E-3f,  1.2960999738E-3f, -4.9274001503E-4f, -3.1295299996E-3f, -4.5751798898E-3f, -5.1014497876E-3f, -4.5751798898E-3f, -3.1295299996E-3f, -4.9274001503E-4f,  1.2960999738E-3f,  1.4050999889E-3f,  1.5874400269E-3f,  8.8387000142E-4f),
    Array(-3.7829999201E-5f,  7.7435001731E-4f,  1.1793200392E-3f,  1.4050999889E-3f,  2.2253401112E-3f,  2.1145299543E-3f,  3.3578000148E-4f, -8.3368999185E-4f,  3.3578000148E-4f,  2.1145299543E-3f,  2.2253401112E-3f,  1.4050999889E-3f,  1.1793200392E-3f,  7.7435001731E-4f, -3.7829999201E-5f),
    Array(-6.2596000498E-4f, -3.2734998967E-4f,  7.7435001731E-4f,  1.5874400269E-3f,  2.1750701126E-3f,  2.5626500137E-3f,  2.2892199922E-3f,  1.9755100366E-3f,  2.2892199922E-3f,  2.5626500137E-3f,  2.1750701126E-3f,  1.5874400269E-3f,  7.7435001731E-4f, -3.2734998967E-4f, -6.2596000498E-4f),
    Array(-4.0483998600E-4f, -6.2596000498E-4f, -3.7829999201E-5f,  8.8387000142E-4f,  1.5450799838E-3f,  1.9235999789E-3f,  2.0687500946E-3f,  2.0898699295E-3f,  2.0687500946E-3f,  1.9235999789E-3f,  1.5450799838E-3f,  8.8387000142E-4f, -3.7829999201E-5f, -6.2596000498E-4f, -4.0483998600E-4f)
  ))

  val lowpass0 = toScalarField(Matrix(
    Array(-8.7009997515E-5f,  -1.3542800443E-3f,  -1.6012600390E-3f,  -5.0337001448E-4f,  2.5240099058E-3f,  -5.0337001448E-4f,  -1.6012600390E-3f,  -1.3542800443E-3f,  -8.7009997515E-5f),
    Array(-1.3542800443E-3f,  2.9215801042E-3f,  7.5227199122E-3f,  8.2244202495E-3f,  1.1076199589E-3f,  8.2244202495E-3f,  7.5227199122E-3f,  2.9215801042E-3f,  -1.3542800443E-3f),
    Array(-1.6012600390E-3f,  7.5227199122E-3f,  -7.0612900890E-3f,  -3.7694871426E-2f,  -3.2971370965E-2f,  -3.7694871426E-2f,  -7.0612900890E-3f,  7.5227199122E-3f,  -1.6012600390E-3f),
    Array(-5.0337001448E-4f,  8.2244202495E-3f,  -3.7694871426E-2f,  4.3813198805E-2f,  0.1811603010f,   4.3813198805E-2f,  -3.7694871426E-2f,  8.2244202495E-3f,  -5.0337001448E-4f),
    Array(2.5240099058E-3f,  1.1076199589E-3f,  -3.2971370965E-2f,  0.1811603010f,   0.4376249909f,   0.1811603010f,   -3.2971370965E-2f,  1.1076199589E-3f,  2.5240099058E-3f),
    Array(-5.0337001448E-4f,  8.2244202495E-3f,  -3.7694871426E-2f,  4.3813198805E-2f,  0.1811603010f,      4.3813198805E-2f,  -3.7694871426E-2f,  8.2244202495E-3f,  -5.0337001448E-4f),
    Array(-1.6012600390E-3f,  7.5227199122E-3f,  -7.0612900890E-3f,  -3.7694871426E-2f,  -3.2971370965E-2f,  -3.7694871426E-2f,  -7.0612900890E-3f,  7.5227199122E-3f,  -1.6012600390E-3f),
    Array(-1.3542800443E-3f,  2.9215801042E-3f,  7.5227199122E-3f,  8.2244202495E-3f,  1.1076199589E-3f,  8.2244202495E-3f,  7.5227199122E-3f,  2.9215801042E-3f,  -1.3542800443E-3f),
    Array(-8.7009997515E-5f,  -1.3542800443E-3f,  -1.6012600390E-3f,  -5.0337001448E-4f,  2.5240099058E-3f,  -5.0337001448E-4f,  -1.6012600390E-3f,  -1.3542800443E-3f,  -8.7009997515E-5f)
  ))

  val lowpass = toScalarField(Matrix(
    Array(-4.3500000174E-5f,  1.2078000145E-4f,  -6.7714002216E-4f,  -1.2434000382E-4f,  -8.0063997302E-4f,  -1.5970399836E-3f,  -2.5168000138E-4f,  -4.2019999819E-4f,  1.2619999470E-3f,  -4.2019999819E-4f,  -2.5168000138E-4f,  -1.5970399836E-3f,  -8.0063997302E-4f,  -1.2434000382E-4f,  -6.7714002216E-4f,  1.2078000145E-4f,  -4.3500000174E-5f),
    Array(1.2078000145E-4f,  4.4606000301E-4f,  -5.8146001538E-4f,  5.6215998484E-4f,  -1.3688000035E-4f,  2.3255399428E-3f,  2.8898599558E-3f,  4.2872801423E-3f,  5.5893999524E-3f,  4.2872801423E-3f,  2.8898599558E-3f,  2.3255399428E-3f,  -1.3688000035E-4f,  5.6215998484E-4f,  -5.8146001538E-4f,  4.4606000301E-4f,  1.2078000145E-4f),
    Array(-6.7714002216E-4f,  -5.8146001538E-4f,  1.4607800404E-3f,  2.1605400834E-3f,  3.7613599561E-3f,  3.0809799209E-3f,  4.1121998802E-3f,  2.2212199401E-3f,  5.5381999118E-4f,  2.2212199401E-3f,  4.1121998802E-3f,  3.0809799209E-3f,  3.7613599561E-3f,  2.1605400834E-3f,  1.4607800404E-3f,  -5.8146001538E-4f,  -6.7714002216E-4f),
    Array(-1.2434000382E-4f,  5.6215998484E-4f,  2.1605400834E-3f,  3.1757799443E-3f,  3.1846798956E-3f,  -1.7774800071E-3f,  -7.4316998944E-3f,  -9.0569201857E-3f,  -9.6372198313E-3f,  -9.0569201857E-3f,  -7.4316998944E-3f,  -1.7774800071E-3f,  3.1846798956E-3f,  3.1757799443E-3f,  2.1605400834E-3f,  5.6215998484E-4f,  -1.2434000382E-4f),
    Array(-8.0063997302E-4f,  -1.3688000035E-4f,  3.7613599561E-3f,  3.1846798956E-3f,  -3.5306399222E-3f,  -1.2604200281E-2f,  -1.8847439438E-2f,  -1.7508180812E-2f,  -1.6485679895E-2f,  -1.7508180812E-2f,  -1.8847439438E-2f,  -1.2604200281E-2f,  -3.5306399222E-3f,  3.1846798956E-3f,  3.7613599561E-3f,  -1.3688000035E-4f,  -8.0063997302E-4f),
    Array(-1.5970399836E-3f,  2.3255399428E-3f,  3.0809799209E-3f,  -1.7774800071E-3f,  -1.2604200281E-2f,  -2.0229380578E-2f,  -1.1091699824E-2f,  3.9556599222E-3f,  1.4385120012E-2f,  3.9556599222E-3f,  -1.1091699824E-2f,  -2.0229380578E-2f,  -1.2604200281E-2f,  -1.7774800071E-3f,  3.0809799209E-3f,  2.3255399428E-3f,  -1.5970399836E-3f),
    Array(-2.5168000138E-4f,  2.8898599558E-3f,  4.1121998802E-3f,  -7.4316998944E-3f,  -1.8847439438E-2f,  -1.1091699824E-2f,  2.1906599402E-2f,  6.8065837026E-2f,  9.0580143034E-2f,  6.8065837026E-2f,  2.1906599402E-2f,  -1.1091699824E-2f,  -1.8847439438E-2f,  -7.4316998944E-3f,  4.1121998802E-3f,  2.8898599558E-3f,  -2.5168000138E-4f),
    Array(-4.2019999819E-4f,  4.2872801423E-3f,  2.2212199401E-3f,  -9.0569201857E-3f,  -1.7508180812E-2f,  3.9556599222E-3f,  6.8065837026E-2f,  0.1445499808f,   0.1773651242f,   0.1445499808f,   6.8065837026E-2f,  3.9556599222E-3f,  -1.7508180812E-2f,  -9.0569201857E-3f,  2.2212199401E-3f,  4.2872801423E-3f,  -4.2019999819E-4f),
    Array(1.2619999470E-3f,  5.5893999524E-3f,  5.5381999118E-4f,  -9.6372198313E-3f,  -1.6485679895E-2f,  1.4385120012E-2f,  9.0580143034E-2f,  0.1773651242f,    0.2120374441f,   0.1773651242f,   9.0580143034E-2f,  1.4385120012E-2f,  -1.6485679895E-2f,  -9.6372198313E-3f,  5.5381999118E-4f,  5.5893999524E-3f,  1.2619999470E-3f),
    Array(-4.2019999819E-4f,  4.2872801423E-3f,  2.2212199401E-3f,  -9.0569201857E-3f,  -1.7508180812E-2f,  3.9556599222E-3f,  6.8065837026E-2f,  0.1445499808f,   0.1773651242f,   0.1445499808f,  6.8065837026E-2f,  3.9556599222E-3f,  -1.7508180812E-2f,  -9.0569201857E-3f,  2.2212199401E-3f,  4.2872801423E-3f,  -4.2019999819E-4f),
    Array(-2.5168000138E-4f,  2.8898599558E-3f,  4.1121998802E-3f,  -7.4316998944E-3f,  -1.8847439438E-2f,  -1.1091699824E-2f,  2.1906599402E-2f,  6.8065837026E-2f,  9.0580143034E-2f,  6.8065837026E-2f,  2.1906599402E-2f,  -1.1091699824E-2f,  -1.8847439438E-2f,  -7.4316998944E-3f,  4.1121998802E-3f,  2.8898599558E-3f,  -2.5168000138E-4f),
    Array(-1.5970399836E-3f,  2.3255399428E-3f,  3.0809799209E-3f,  -1.7774800071E-3f,  -1.2604200281E-2f,  -2.0229380578E-2f,  -1.1091699824E-2f,  3.9556599222E-3f,  1.4385120012E-2f,  3.9556599222E-3f,  -1.1091699824E-2f,  -2.0229380578E-2f,  -1.2604200281E-2f,  -1.7774800071E-3f,  3.0809799209E-3f,  2.3255399428E-3f,  -1.5970399836E-3f),
    Array(-8.0063997302E-4f,  -1.3688000035E-4f,  3.7613599561E-3f,  3.1846798956E-3f,  -3.5306399222E-3f,  -1.2604200281E-2f,  -1.8847439438E-2f,  -1.7508180812E-2f,  -1.6485679895E-2f,  -1.7508180812E-2f,  -1.8847439438E-2f,  -1.2604200281E-2f,  -3.5306399222E-3f,  3.1846798956E-3f,  3.7613599561E-3f,  -1.3688000035E-4f,  -8.0063997302E-4f),
    Array(-1.2434000382E-4f,  5.6215998484E-4f,  2.1605400834E-3f,  3.1757799443E-3f,  3.1846798956E-3f,  -1.7774800071E-3f,  -7.4316998944E-3f,  -9.0569201857E-3f,  -9.6372198313E-3f,  -9.0569201857E-3f,  -7.4316998944E-3f,  -1.7774800071E-3f,  3.1846798956E-3f,  3.1757799443E-3f,  2.1605400834E-3f,  5.6215998484E-4f,  -1.2434000382E-4f),
    Array(-6.7714002216E-4f,  -5.8146001538E-4f,  1.4607800404E-3f,  2.1605400834E-3f,  3.7613599561E-3f,  3.0809799209E-3f,  4.1121998802E-3f,  2.2212199401E-3f,  5.5381999118E-4f,  2.2212199401E-3f,  4.1121998802E-3f,  3.0809799209E-3f,  3.7613599561E-3f,  2.1605400834E-3f,  1.4607800404E-3f,  -5.8146001538E-4f,  -6.7714002216E-4f),
    Array(1.2078000145E-4f,  4.4606000301E-4f,  -5.8146001538E-4f,  5.6215998484E-4f,  -1.3688000035E-4f,  2.3255399428E-3f,  2.8898599558E-3f,  4.2872801423E-3f,  5.5893999524E-3f,  4.2872801423E-3f,  2.8898599558E-3f,  2.3255399428E-3f,  -1.3688000035E-4f,  5.6215998484E-4f,  -5.8146001538E-4f,  4.4606000301E-4f,  1.2078000145E-4f),
    Array(-4.3500000174E-5f,  1.2078000145E-4f,  -6.7714002216E-4f,  -1.2434000382E-4f,  -8.0063997302E-4f,  -1.5970399836E-3f,  -2.5168000138E-4f,  -4.2019999819E-4f,  1.2619999470E-3f,  -4.2019999819E-4f,  -2.5168000138E-4f,  -1.5970399836E-3f,  -8.0063997302E-4f,  -1.2434000382E-4f,  -6.7714002216E-4f,  1.2078000145E-4f,  -4.3500000174E-5f)
  ))

  val bandpass: Array[ScalarField] = Array(
    // These are not very accurate, but OK since we're not using them for
    // reconstruction, only because we need quadrature filters for some
    // applications of the pyramid.
    H3(0), H3(1), H3(2), H3(3)
  )
}

