/*
 * (c) Copyright 2016 Hewlett Packard Enterprise Development LP
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package toolkit.filtering.contourlets

import libcog._
import toolkit.filtering.MatlabFunctions

/** Implements atrousfilters.m from the nonsubsampled contourlet toolbox.
  *
  * @author Greg Snider
  */
object AtrousFilter extends MatlabFunctions {

  /** Lowpass / highpass analysis and synthesis (inverse) filters. */
  val (lowpass, highpass, inverseLowpass, inverseHighpass) = maxflat()

  /** Quasi-tight frame filters, frame bounds A=.97 and B=1
    *
    * @return (lowpass analysis, lowpass synthesis, highpass analysis,
    *         highpass synthesis) filters.
    */
  private def maxflat(): (Matrix, Matrix, Matrix, Matrix) = {

    var h0 = Matrix(
      Array(-7.900496718847182e-07f, 0.0f, 0.000014220894093924927f,
        0.000025281589500310983f, -0.000049773129328737247f,
        -0.00022753430550279883f, -0.00033182086219158167f),
      Array(0f, 0f, 0f, 0f, 0f, 0f, 0f),
      Array(0.000014220894093924927f, 0.0f, -0.0002559760936906487f,
        -0.00045506861100559767f, 0.0008959163279172705f,
        0.004095617499050379f, 0.00597277551944847f),
      Array(0.000025281589500310983f, 0.0f, -0.00045506861100559767f,
        0.0009765625f, 0.0015927401385195919f,
        -0.0087890625f, -0.01795090623402861f),
      Array(-0.000049773129328737247f, 0.0f,  0.0008959163279172705f,
        0.0015927401385195919f, -0.0031357071477104465f,
        -0.014334661246676327f,  -0.020904714318069645f),
      Array(-0.00022753430550279883f,  0.0f,  0.004095617499050379f,
        -0.0087890625f, -0.014334661246676327f,
        0.0791015625f, 0.16155815610625748f),
      Array(-0.00033182086219158167f, 0.0f,  0.00597277551944847f,
        -0.01795090623402861f, -0.020904714318069645f,
        0.16155815610625748f, 0.3177420190660832f)
    )

    var g0 = Matrix(
      Array(-6.391587676622346e-010f, 0.0f, 1.7257286726880333e-08f,
        3.067962084778726e-08f, -1.3805829381504267e-07f,
        -5.522331752601707e-07f, -3.3747582932565985e-07f,
        1.9328161134105974e-06f, 5.6949046198705095e-06f,
        7.649452131381623e-06f),
      Array(0f, 0f, 0f, 0f, 0f,  0f,  0f,  0f,  0f,  0f),
      Array(1.7257286726880333e-08f, 0f, -4.65946741625769e-07f,
        -8.283497628902559e-07f, 3.727573933006152e-06f,
        0.000014910295732024608f, 9.111847391792816e-06f,
        -0.000052186035062086126f,  -0.00015376242473650378f,
        -0.00020653520754730382f),
      Array(3.067962084778726e-08f, 0f, -8.283497628902559e-07f,
        -1.2809236054493144e-06f, 6.6267981031220475e-06f,
        0.00002305662489808766f, 0.000010064497559808503f,
        -0.0000806981871433068f, -0.00021814634152337594f,
        -0.00028666046030363884f),
      Array(-1.3805829381504267e-07f,  0f, 3.727573933006152e-06f,
        6.6267981031220475e-06f, -0.000029820591464049215f,
        -0.00011928236585619686f, -0.00007289477913434253f,
        0.000417488280496689f, 0.0012300993978920302f,
        0.0016522816603784306f),
      Array(-5.522331752601707e-07f, 0f, 0.000014910295732024608f,
        0.00002305662489808766f, -0.00011928236585619686f,
        -0.00041501924816557786f, -0.00018116095607655303f,
        0.0014525673685795225f, 0.0039266341474207675f,
        0.005159888285465499f),
      Array(-3.3747582932565985e-07f,  0f, 9.111847391792816e-06f,
        0.000010064497559808503f, -0.00007289477913434253f,
        -0.00018116095607655303f, 0.001468581806076247f,
        0.0006340633462679356f, -0.01181401175635013f,
        -0.021745034491193898f),
      Array(1.9328161134105974e-06f, 0f, -0.000052186035062086126f,
        -0.0000806981871433068f, 0.000417488280496689f,
        0.0014525673685795225f, 0.0006340633462679356f,
        -0.005083985790028328f, -0.013743219515972684f,
        -0.018059608999129246f),
      Array(5.6949046198705095e-06f, 0f, -0.00015376242473650378f,
        -0.00021814634152337594f, 0.0012300993978920302f,
        0.0039266341474207675f, -0.01181401175635013f,
        -0.013743219515972684f, 0.0826466923977296f,
        0.1638988884584603f),
      Array(7.649452131381623e-06f,  0f, -0.00020653520754730382f,
        -0.00028666046030363884f, 0.0016522816603784306f,
        0.005159888285465499f, -0.021745034491193898f,
        -0.018059608999129246f, 0.1638988884584603f,
        0.31358726209239235f)
    )

    var g1= Matrix(
      Array(-7.900496718847182e-07f, 0f,  0.000014220894093924927f,
        0.000025281589500310983f, -0.000049773129328737247f,
        -0.00022753430550279883f, -0.00033182086219158167f),
      Array(0f, 0f, 0f, 0f, 0f, 0f, 0f),
      Array(0.000014220894093924927f,  0f, -0.0002559760936906487f,
        -0.00045506861100559767f, 0.0008959163279172705f,
        0.004095617499050379f, 0.00597277551944847f),
      Array(0.000025281589500310983f, 0f, -0.00045506861100559767f,
        -0.0009765625f, 0.0015927401385195919f, 0.0087890625f,
        0.01329909376597139f),
      Array(-0.000049773129328737247f, 0f, 0.0008959163279172705f,
        0.0015927401385195919f, -0.0031357071477104465f,
        -0.014334661246676327f, -0.020904714318069645f),
      Array(-0.00022753430550279883f, 0f, 0.004095617499050379f,
        0.0087890625f, -0.014334661246676327f,
        -0.0791015625f, -0.1196918438937425f),
      Array(-0.00033182086219158167f, 0f, 0.00597277551944847f,
        0.01329909376597139f, -0.020904714318069645f,
        -0.1196918438937425f, 0.8177420190660831f)
    )

    var h1 = Matrix(
      Array(6.391587676622346e-010f,  0f, -1.7257286726880333e-08f,
        -3.067962084778726e-08f, 1.3805829381504267e-07f,
        5.522331752601707e-07f, 3.3747582932565985e-07f,
        -1.9328161134105974e-06f, -5.6949046198705095e-06f,
        -7.649452131381623e-06f),
      Array(0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f),
      Array(-1.7257286726880333e-08f, 0f, 4.65946741625769e-07f,
        8.283497628902559e-07f, -3.727573933006152e-06f,
        -0.000014910295732024608f, -9.111847391792816e-06f,
        0.000052186035062086126f, 0.00015376242473650378f,
        0.00020653520754730382f),
      Array(-3.067962084778726e-08f, 0f, 8.283497628902559e-07f,
        -2.9917573832012203e-07f, -6.6267981031220475e-06f,
        5.3851632897621965e-06f, 0.00004049868144081346f,
        -0.00001884807151416769f, -0.00023692226948222173f,
        -0.0003769812640795245f),
      Array(1.3805829381504267e-07f, 0f, -3.727573933006152e-06f,
        -6.6267981031220475e-06f, 0.000029820591464049215f,
        0.00011928236585619686f, 0.00007289477913434253f,
        -0.000417488280496689f, -0.0012300993978920302f,
        -0.0016522816603784306f),
      Array(5.522331752601707e-07f, 0f, -0.000014910295732024608f,
        5.3851632897621965e-06f, 0.00011928236585619686f,
        -0.00009693293921571956f, -0.0007289762659346422f,
        0.00033926528725501844f, 0.004264600850679991f,
        0.006785662753431441f),
      Array(3.3747582932565985e-07f, 0f, -9.111847391792816e-06f,
        0.00004049868144081346f, 0.00007289477913434253f,
        -0.0007289762659346422f, -0.001468581806076247f,
        0.002551416930771248f, 0.01181401175635013f,
        0.017093222023136675f),
      Array(-1.9328161134105974e-06f, 0f, 0.000052186035062086126f,
        -0.00001884807151416769f, -0.000417488280496689f,
        0.00033926528725501844f, 0.002551416930771248f,
        -0.0011874285053925643f, -0.01492610297737997f,
        -0.023749819637010044f),
      Array(-5.6949046198705095e-06f, 0f, 0.00015376242473650378f,
        -0.00023692226948222173f, -0.0012300993978920302f,
        0.004264600850679991f, 0.01181401175635013f,
        -0.01492610297737997f, -0.0826466923977296f,
        -0.12203257624594532f),
      Array(-7.649452131381623e-06f, 0f, 0.00020653520754730382f,
        -0.0003769812640795245f, -0.0016522816603784306f,
        0.006785662753431441f, 0.017093222023136675f,
        -0.023749819637010044f, -0.12203257624594532f,
        0.821896776039774f)
    )
    g0 = concat(g0, fliplr(clipLastColumn(g0)))
    g0 = stack(g0, flipud(clipLastRow(g0)))
    h0 = concat(h0, fliplr(clipLastColumn(h0)))
    h0 = stack(h0, flipud(clipLastRow(h0)))
    g1 = concat(g1, fliplr(clipLastColumn(g1)))
    g1 = stack(g1, flipud(clipLastRow(g1)))
    h1 = concat(h1, fliplr(clipLastColumn(h1)))
    h1 = stack(h1, flipud(clipLastRow(h1)))

    (h0, h1, g0, g1)
  }
}